/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package atransfer.views;

import atransfer.DatabaseExecutor;
import atransfer.ExcelReader;
import atransfer.InfoXLS;
import atransfer.ObservadorCamposListener;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author jfjara
 */
public class ATransferMainWindow extends javax.swing.JFrame {

    private final ObservadorCamposListener listenerCampos = new ObservadorCamposListener();

    private DefaultListModel model;

    /**
     * Creates new form ATransferMainWindow
     */
    public ATransferMainWindow() {
        initComponents();
        initCustomComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton6 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        hostTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        esquemaTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        puertoTextField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        usuarioTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        conectarButton = new javax.swing.JButton();
        testButton = new javax.swing.JButton();
        verPasswordButton = new javax.swing.JToggleButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        tablasComboBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        columnasListField = new javax.swing.JList<>();
        jPanel4 = new javax.swing.JPanel();
        arribaColButton = new javax.swing.JButton();
        abajoColButton = new javax.swing.JButton();
        quitarColButton = new javax.swing.JButton();
        recargarColButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        pathFicheroTextField = new javax.swing.JTextField();
        selecionarFicButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        iniciarButton = new javax.swing.JButton();
        previewButton = new javax.swing.JButton();
        cerrarButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();

        jButton6.setText("jButton6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Herramienta de volcado a base de datos");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Configuración base de datos"));

        jLabel1.setText("Host:");

        jLabel2.setText("Esquema:");

        jLabel3.setText("Puerto:");

        jRadioButton1.setSelected(true);
        jRadioButton1.setText("MySQL");
        jRadioButton1.setEnabled(false);
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("Oracle");
        jRadioButton2.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                    .addComponent(jRadioButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jRadioButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel4.setText("Usuario:");

        jLabel5.setText("Password:");

        conectarButton.setText("Conectar");
        conectarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conectarButtonActionPerformed(evt);
            }
        });

        testButton.setText("Probar conexión");
        testButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testButtonActionPerformed(evt);
            }
        });

        verPasswordButton.setText("Ver");
        verPasswordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verPasswordButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(hostTextField)
                            .addComponent(usuarioTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(puertoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(esquemaTextField))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(passwordField)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(verPasswordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(testButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(conectarButton)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(hostTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(esquemaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(puertoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(usuarioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(verPasswordButton))))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(conectarButton)
                    .addComponent(testButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Base de datos"));

        jLabel6.setText("Tabla:");

        tablasComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tablasComboBoxActionPerformed(evt);
            }
        });

        jLabel7.setText("Columnas:");

        columnasListField.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(columnasListField);

        arribaColButton.setText("Arriba");
        arribaColButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arribaColButtonActionPerformed(evt);
            }
        });

        abajoColButton.setText("Abajo");
        abajoColButton.setActionCommand("");
        abajoColButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abajoColButtonActionPerformed(evt);
            }
        });

        quitarColButton.setText("Quitar");
        quitarColButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitarColButtonActionPerformed(evt);
            }
        });

        recargarColButton.setText("Recargar cols");
        recargarColButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recargarColButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(arribaColButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(abajoColButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(quitarColButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(recargarColButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(arribaColButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(abajoColButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quitarColButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(recargarColButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tablasComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tablasComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Fichero de datos"));

        selecionarFicButton.setText("Seleccionar");
        selecionarFicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecionarFicButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pathFicheroTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selecionarFicButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pathFicheroTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selecionarFicButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        iniciarButton.setText("Iniciar");
        iniciarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarButtonActionPerformed(evt);
            }
        });

        previewButton.setText("Preview");
        previewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previewButtonActionPerformed(evt);
            }
        });

        cerrarButton.setText("Cerrar");
        cerrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cerrarButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(previewButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(iniciarButton)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(iniciarButton)
                .addComponent(previewButton)
                .addComponent(cerrarButton))
        );

        jLabel8.setText("Juan Francisco Jara Bellido. 29/11/2018 - Version 0.1 Beta");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel8))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void testButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testButtonActionPerformed
        testear();
    }//GEN-LAST:event_testButtonActionPerformed

    private void testear() {
        String url = "jdbc:mysql://" + hostTextField.getText() + ":" + puertoTextField.getText() + "/" + esquemaTextField.getText();
        String username = usuarioTextField.getText();
        String password = passwordField.getText();
        try {
            boolean result = DatabaseExecutor.testConnection(url, username, password);
            String resultText;
            if (result) {
                resultText = "Test OK!";
            } else {
                resultText = "ERROR DE CONEXIÓN";
            }
            JOptionPane.showMessageDialog(this, resultText);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "No se puede acceder a la base de datos:\n" + ex.getMessage(), "Error al conectarse a la base de datos", JOptionPane.OK_OPTION);
        }
    }

    private void conectarBaseDatos() {
        try {
            String url = "jdbc:mysql://" + hostTextField.getText() + ":" + puertoTextField.getText() + "/" + esquemaTextField.getText();
            String username = usuarioTextField.getText();
            String password = passwordField.getText();
            List<String> tables = DatabaseExecutor.getTableNamesFromDatabase(url, username, password);
            tables.forEach((tabla) -> {
                tablasComboBox.addItem(tabla);
            });
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Se ha producido el siguiente error:\n" + e.getMessage(), "Error al conectarse a la base de datos", JOptionPane.OK_OPTION);
        }
    }

    private void conectarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conectarButtonActionPerformed
        conectarBaseDatos();
    }//GEN-LAST:event_conectarButtonActionPerformed

    private void arribaColButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arribaColButtonActionPerformed
        moverColumnaArriba();
    }//GEN-LAST:event_arribaColButtonActionPerformed

    private void abajoColButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abajoColButtonActionPerformed
        moverColumnaAbajo();
    }//GEN-LAST:event_abajoColButtonActionPerformed

    private void quitarColButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitarColButtonActionPerformed
        quitarColumna();
    }//GEN-LAST:event_quitarColButtonActionPerformed

    private void selecionarFicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecionarFicButtonActionPerformed
        seleccionarFichero();
    }//GEN-LAST:event_selecionarFicButtonActionPerformed

    private void cerrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarButtonActionPerformed
        cerrarAplicacion();
    }//GEN-LAST:event_cerrarButtonActionPerformed

    private void previewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previewButtonActionPerformed
        previewDeInserts();
    }//GEN-LAST:event_previewButtonActionPerformed

    private void iniciarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarButtonActionPerformed
        comenzarExportacion();
    }//GEN-LAST:event_iniciarButtonActionPerformed

    private void tablasComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tablasComboBoxActionPerformed
        loadColumnsFromTable();
    }//GEN-LAST:event_tablasComboBoxActionPerformed

    private void recargarColButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recargarColButtonActionPerformed
        recargarColumnasTabla();
    }//GEN-LAST:event_recargarColButtonActionPerformed

    private void verPasswordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verPasswordButtonActionPerformed
        verClave();
    }//GEN-LAST:event_verPasswordButtonActionPerformed

    private void loadColumnsFromTable() {
        try {
            String url = "jdbc:mysql://" + hostTextField.getText() + ":" + puertoTextField.getText() + "/" + esquemaTextField.getText();
            String username = usuarioTextField.getText();
            String password = passwordField.getText();
            String tablename = (String) tablasComboBox.getSelectedItem();
            List<String> columns = DatabaseExecutor.getColumnsFromTable(url, username, password, tablename);
            model = new DefaultListModel();
            for (int i = 0; i < columns.size(); i++) {
                model.add(i, columns.get(i));
            }
            columnasListField.setModel(model);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Se ha producido el siguiente error:\n" + ex.getMessage(), "Error al recuperar columnas", JOptionPane.OK_OPTION);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ATransferMainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ATransferMainWindow().setVisible(true);
            }
        });
    }

    public boolean checkTextHost() {
        boolean result = true;
        String host = hostTextField.getText();
        if (host.trim().isEmpty()) {
            result = false;
        }
        return result;
    }

    public boolean checkTextPort() {
        boolean result = true;
        String port = puertoTextField.getText();
        if (port.trim().isEmpty()) {
            result = false;
        }
        return result;
    }

    public boolean checkTextSchema() {
        boolean result = true;
        String port = esquemaTextField.getText();
        if (port.trim().isEmpty()) {
            result = false;
        }
        return result;
    }

    public boolean checkTextUser() {
        boolean result = true;
        String username = usuarioTextField.getText();
        if (username.trim().isEmpty()) {
            result = false;
        }
        return result;
    }

    public boolean checkTextPassword() {
        boolean result = true;
        String password = passwordField.getText();
        if (password.trim().isEmpty()) {
            result = false;
        }
        return result;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abajoColButton;
    private javax.swing.JButton arribaColButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cerrarButton;
    private javax.swing.JList<String> columnasListField;
    private javax.swing.JButton conectarButton;
    private javax.swing.JTextField esquemaTextField;
    private javax.swing.JTextField hostTextField;
    private javax.swing.JButton iniciarButton;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTextField pathFicheroTextField;
    private javax.swing.JButton previewButton;
    private javax.swing.JTextField puertoTextField;
    private javax.swing.JButton quitarColButton;
    private javax.swing.JButton recargarColButton;
    private javax.swing.JButton selecionarFicButton;
    private javax.swing.JComboBox<String> tablasComboBox;
    private javax.swing.JButton testButton;
    private javax.swing.JTextField usuarioTextField;
    private javax.swing.JToggleButton verPasswordButton;
    // End of variables declaration//GEN-END:variables

    private void initCustomComponents() {
        listenerCampos.setWindow(this);
        hostTextField.addKeyListener(listenerCampos);
        puertoTextField.addKeyListener(listenerCampos);
        esquemaTextField.addKeyListener(listenerCampos);
        usuarioTextField.addKeyListener(listenerCampos);
        passwordField.addKeyListener(listenerCampos);

        activarBotonesBBDD(false);
    }

    public void activarBotonesBBDD(boolean b) {
        testButton.setEnabled(b);
        conectarButton.setEnabled(b);
    }

    private void verClave() {
        if (verPasswordButton.isSelected()) {
            passwordField.setEchoChar((char) 0);
        } else {
            passwordField.setEchoChar('*');
        }
    }

    private void moverColumnaArriba() {
        if (model == null || model.isEmpty()) {
            return;
        }
        int index = columnasListField.getSelectedIndex();
        if (index > 0) {
            String columna = (String) model.getElementAt(index);
            model.removeElementAt(index);
            model.insertElementAt(columna, index - 1);
            columnasListField.setSelectedIndex(index - 1);
        }
    }

    private void moverColumnaAbajo() {
        if (model == null || model.isEmpty()) {
            return;
        }
        int index = columnasListField.getSelectedIndex();
        if (index >= 0 && index < model.getSize() - 1) {
            String columna = (String) model.getElementAt(index);
            model.removeElementAt(index);
            model.insertElementAt(columna, index + 1);
            columnasListField.setSelectedIndex(index + 1);
        }
    }

    private void quitarColumna() {
        if (model == null || model.isEmpty()) {
            return;
        }
        int index = columnasListField.getSelectedIndex();
        if (index >= 0 && index < model.getSize()) {
            model.removeElementAt(index);
        }
    }

    private void seleccionarFichero() {
        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        FileFilter filter = new FileNameExtensionFilter("Ficheros Excel", "xlsx");
        jfc.setFileFilter(filter);
        int returnValue = jfc.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = jfc.getSelectedFile();
            pathFicheroTextField.setText(selectedFile.getAbsolutePath());
        }
    }

    private void comenzarExportacion() {        
        if (hayDatosFicheroExportacion() && hayDatosTablasColumnas()) {
            if (JOptionPane.showConfirmDialog(this, "Se dispone a insertar registros en la columna seleccionada. \n¿Continuar?", "Inicio de proceso de volcado", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                try {
                    InfoXLS infoXls = getXLSObject();
                    Map<Integer, Map<String, Object>> results = ExcelReader.readXLS(infoXls);
                    List<String> inserts = ExcelReader.extractInserts(infoXls.getTableName(), results);
                    List<String> errors = DatabaseExecutor.executeInserts(infoXls, inserts);

                    if (errors.isEmpty()) {
                        JOptionPane.showMessageDialog(this, "Proceso finalizado con éxito");
                    } else {
                        JOptionPane.showMessageDialog(this, "Proceso finalizado errores");
                        ConsoleWindow console = new ConsoleWindow();
                        console.setInserts(errors);
                        console.setVisible(true);
                        console.validate();
                    }

                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this, "ERROR: " + ex.getMessage());
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe rellenar todos los campos obligatorios para poder continuar", "Error en validaciones", JOptionPane.OK_OPTION);
        }
    }

    private void previewDeInserts() {
        if (hayDatosFicheroExportacion() && hayDatosTablasColumnas()) {
            try {
                InfoXLS infoXls = getXLSObject();
                Map<Integer, Map<String, Object>> results = ExcelReader.readXLS(infoXls);
                List<String> inserts = ExcelReader.extractInserts(infoXls.getTableName(), results);

                ConsoleWindow window = new ConsoleWindow();
                window.setInserts(inserts);
                window.setVisible(true);

            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Error al leer el fichero de datos.\n" + ex.getMessage(), "Error leyendo fichero de origen de datos", JOptionPane.OK_OPTION);                
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe rellenar todos los campos obligatorios para poder continuar", "Error en validaciones", JOptionPane.OK_OPTION);
        }
    }

    private InfoXLS getXLSObject() {
        String url = "jdbc:mysql://" + hostTextField.getText() + ":" + puertoTextField.getText() + "/" + esquemaTextField.getText();
        String username = usuarioTextField.getText();
        String password = passwordField.getText();
        String tablename = (String) tablasComboBox.getSelectedItem();
        Map<Integer, String> columns = new HashMap<>();
        List<Object> objs = Arrays.asList((Object[]) model.toArray());
        for (int i = 0; i < model.toArray().length; i++) {
            columns.put(i, (String) model.toArray()[i]);
        }
        InfoXLS infoXls = new InfoXLS(pathFicheroTextField.getText(),
                url, username, password, tablename, columns);
        return infoXls;
    }

    private void cerrarAplicacion() {
        System.exit(1);
    }

    private void recargarColumnasTabla() {   
        if (tablasComboBox.getSelectedItem() != null) {
            loadColumnsFromTable();
        }
    }

    private boolean hayDatosTablasColumnas() {
        boolean result = false;
        if (tablasComboBox.getSelectedItem() != null && !model.isEmpty()) {
            result = true;
        }
        return result;
    }

    private boolean hayDatosFicheroExportacion() {
        boolean result = false;
        if (!pathFicheroTextField.getText().isEmpty()) {
            result = true;
        }
        return result;
    }

//    CREATE TABLE `w2m`.`tabla_pruebas` (
//  `col1` INT NOT NULL,
//  `col2` VARCHAR(255) NULL,
//  `col3` VARCHAR(255) NULL,
//  `col4` VARCHAR(255) NULL,
//  `col5` VARCHAR(255) NULL,
//  PRIMARY KEY (`col1`));
}
